---

- name: Deploy users
  hosts: all
  become: true

  tasks:

    - name: Load CSV file
      ansible.builtin.include_tasks: tasks/load_csv.yml

    - name: Create users
      ansible.builtin.user:
        name: "{{ item.User  }}"
        shell: /bin/bash
        create_home: true
        comment: "{{ item.Comment }} -team {{ item['Owner-Team'] }}"
        state: present
      loop: "{{ all_users.list }}"

    - name: Deploy existing RSA keys for users
      ansible.posix.authorized_key:
        user: "{{ item.User }}"
        key: "{{ item['Pub-key'] | trim }}"
        state: present
      loop: "{{ all_users.list }}"
      when: item['Pub-key'] is defined and (item['Pub-key'] | trim) !=''

    - name: Create a local folder for storing keys for functional users
      ansible.builtin.file:
        path: "./files/usr_keys/"
        state: directory
      delegate_to: localhost
      become: false

    - name: Generate keys for functional users
      community.crypto.openssh_keypair:
        path: "./files/usr_keys/id_{{ item.User }}"
        type: ed25519
        comment: "{{ item.User }}"
        force: false
      loop: "{{ all_users.list }}"
      when: item.Functional == '1'
      delegate_to: localhost
      become: false

    - name: Set ssh config for no need to specify path for user keys
      delegate_to: localhost
      become: false
      ansible.builtin.blockinfile:
        path: "{{ lookup('env','HOME') }}/.ssh/config"
        marker: "# {mark} ANSIBLE ADDED USER {{ item.User}}-{{ inventory_hostname }}" 
        block: |
          Host "{{ inventory_hostname }}"
            HostName "{{ inventory_hostname }}"
            User "{{ item.User }}"
            IdentityFile "{{ playbook_dir }}/files/usr_keys/id_{{ item.User }}"
        create: yes
        mode: '0600'
      loop: "{{ all_users.list }}"
      when: item.Functional == '1'



    - name: Create ssh folder for functional users
      ansible.builtin.file:
        path: "/home/{{ item.User }}/.ssh"
        state: directory
        mode: "0700"
        owner: "{{ item.User }}"
        group: "{{ item.User }}"
      loop: "{{ all_users.list }}"

- name: Deploy SSH Keys
  hosts: all
  become: true

  tasks:

    - name: Load CSV file
      ansible.builtin.include_tasks: tasks/load_csv.yml

    - name: Deploy ssh keys for functional users
      ansible.posix.authorized_key:
        user: "{{ item.User }}"
        key: "{{ lookup('file', 'files/usr_keys/id_' + item.User + '.pub') }}"
        state: present
      loop: "{{ all_users.list }}"
      when: item.Functional == '1'

    - name: Lock and expire users without keys
      ansible.builtin.user:
        name: "{{ item.User }}"
        state: present
        password_lock: true
        expires: 1
      loop: "{{ all_users.list }}"
      when: (item['Pub-key'] | trim == '') and (item.Functional == '0')
    
    - name: Set no password login only ssh keys
      ansible.builtin.include_tasks: ./tasks/no_ps_log.yml

  handlers:
    - name: Restart sshd
      ansible.builtin.service:
        name: "{{ ssh_demon_name }}"
        state: restarted

